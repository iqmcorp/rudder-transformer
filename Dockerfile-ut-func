# syntax=docker/dockerfile:1.4
FROM ubuntu:20.04 AS base

RUN apt-get update \
  && apt-get install -y curl make g++ ssh git \
  && apt-get install -y cpio \
  && curl -sL https://deb.nodesource.com/setup_14.x | bash \
  && apt-get install -y nodejs \
  && rm -rf /var/lib/apt/lists/* \
  && rm -rf /var/lib/apt/lists.d/* \
  && apt-get autoremove \
  && apt-get clean \
  && apt-get autoclean

#######
# These commands are needed for installing 
# NPM packages with Git URLs (isolated-vm)
USER root

RUN mkdir /root/.ssh/
RUN touch /root/.ssh/known_hosts

ARG ssh_key
RUN echo $ssh_key
RUN echo "$ssh_key" > /root/.ssh/id_rsa &&  chmod 600 /root/.ssh/id_rsa
RUN ssh-keyscan github.com >> ~/.ssh/known_hosts
########

RUN adduser --disabled-password --gecos "" --uid 1000 node

RUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app && mkdir -p /home/node/.npm &&  chown -R node:node /home/node/.npm

FROM base AS development

ARG version
ENV transformer_build_version=$version

WORKDIR /home/node/app
USER node
COPY --chown=node:node . .
COPY package*.json ./

USER node

RUN npm ci
RUN npm run build

HEALTHCHECK --interval=1s --timeout=30s --retries=30 \
    CMD  wget --no-verbose --tries=5 --spider http://localhost:9090/health || exit 1

CMD [ "npm", "start" ]

EXPOSE 9090/tcp

# TODO: Add prod builds
